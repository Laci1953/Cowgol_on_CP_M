David Given wrote, on his Cowgol site:
"Cowgol is an experimental, Ada-inspired language for very small systems (6502, Z80, etc). It's different because it's
intended to be self-hosted on these devices: the end goal is to be able to rebuild the entire compiler on an 8-bit micro,
although we're not there yet.".

Now, this end goal is almost done, on Z80 based CP/M computers.
It is possible to compile all the parts of the Cowgol compiler on CP/M, using the source files published by David Given on
his site. The only source file which cannot be generated on CP/M is the file parser.coh from Cowfe; 
it can be built only by using the tool 'lemon', on a Unix machine.

Therefore, with this exception, the compilation of the Cowgol compiler can be now performed on a CP/M machine.

A customized Cowgol compiler was used, configured to use a 512 KB RAM board to store data used by the compiler.

Compiling COWFE

C>cowfen main.cow main.cos
COWFE: 21kB free
448kB free extended memory
  > MAIN.COW
    > cowgol.coh
      > common.coh
    < cowgol.coh
  < MAIN.COW
    > argv.coh
  < MAIN.COW
    > strings.coh
  < MAIN.COW
    > malloc.coh
  < MAIN.COW
    > file.coh
      > commfile.coh
    < file.coh
  < MAIN.COW
    > coodecls.coh
  < MAIN.COW
    > types.coh
  < MAIN.COW
    > allocato.coh
  < MAIN.COW
    > parserto.coh
  < MAIN.COW
    > lexer.coh
  < MAIN.COW
    > midcodec.coh
      > midcodes.coh
    < midcodec.coh
  < MAIN.COW
    > emitter.coh
  < MAIN.COW
    > regcache.coh
  < MAIN.COW
    > namespac.coh
  < MAIN.COW
    > codegen.coh
      > arch.coh
    < codegen.coh
      > cobout.coh
    < codegen.coh
  < MAIN.COW
    > symbols.coh
  < MAIN.COW
    > express.coh
  < MAIN.COW
    > treewalk.coh
  < MAIN.COW
    > parser.coh
  < MAIN.COW
done: 21kB free
151kB free extended memory

C>cowben main.cos main.coo
COWBE: 24kB free main memory
448kB free extended memory
__main
Exit
ExitWithError
AlignUp
get_char
print_char
MemSet
print
print_nl
UIToA
IToA
print_i32
print_i16
print_i8
print_hex_i8
print_hex_i16
print_hex_i32
AToI
MemZero
ArgvInit
ArgvNext
StrCmp
ToLower
StrICmp
StrLen
CopyString
MemCopy
DumpBlocks
CheckMemoryChain
RawAlloc
Alloc
AddFreeBlock
Free
GetFreeMemory
StrDup
file_i_init
fill
fcb_i_gbpb
fcb_i_blockin
fcb_i_blockout
fcb_i_changeblock
fcb_i_convert_a_to_error
FCBOpenIn
FCBOpenUp
FCBOpenOut
FCBClose
FCBSeek
FCBPos
FCBExt
fcb_i_nextchar
FCBGetChar
FCBPutChar
FCBPutString
FCBGetBlock
FCBPutBlock
StrDupBraced
StrDupArrayed
InternalStrDup
AllocNewSymbol
FreeSymbol
AllocNewType
FreeType
InternalAlloc
StartError
EndError
SimpleError
LexerAddIncludePath
LexerPrintSpaces
lexer_i_open
lexer_i_close
LexerIncludeFile
LexerReadToken
lexer_i_ctype
lexer_i_getchar
lexer_i_unparseable
lexer_i_skipwhitespace
lexer_i_read_identifier
lexer_i_match_keyword
lexer_i_read_number
lexer_i_malformed
lexer_i_get_escaped
lexer_i_read_string
lexer_i_read_char
malformed
lexer_i_include
malformed_include
lexer_i_line_directive
CountParameters
GetInputParameter
GetOutputParameter
BadNodeWidth
WidthToIndex
MidBltu
MidSubref
MidStartinit
MidCall
MidEndinit
MidCast1
MidInit
MidRshifts
MidCast8
MidBor
MidCast2
MidMul
MidPoparg
MidArg
MidString
MidCast4
MidFallback
MidReturn
MidAsmsymbol
MidBeq
MidJump
MidInitsubref
MidAsmgroupend
MidEndcase
MidRshiftu
MidLabel
MidInitstring
MidAsmgroupstart
MidEndsub
MidEndfile
MidInitaddress
MidEor
MidAsmvalue
MidAsmstart
MidNeg
MidAnd
MidAddress
MidAdd
MidAsmend
MidDivu
MidRems
MidBlts
MidRemu
MidDivs
MidWhencase
MidBand
MidDeref
MidSub
MidAsmtext
MidStartcase
MidLshift
MidStartfile
MidPair
MidEnd
MidNot
MidOr
MidConstant
MidStore
MidStartsub
MidAsmsubref
MidcodeName
AllocateNewNode
FreeNode
PurgeAllFreeNodes
NodeWidth
midcodec_i_bad_fold
FoldConstant1
FoldConstant2
MidC1Op
GetPowerOfTwo
MidC2Op
MidCCast
E_b8
E_b16
E_b32
E_bsize
E_space
E_comma
E_tab
E_nl
E_openp
E_closep
E
E_countedstring
E_u32
E_u16
E_u8
E_i8
E_i16
E_i32
E_h
E_h8
E_h16
E_h32
EmitterOpenfile
EmitterClosefile
EmitterDeclareSubroutine
EmitterDeclareExternalSubroutine
EmitterReferenceSubroutineById
EmitterReferenceSubroutine
EmitterDeclareWorkspace
EmitParameterList
EmitterEmitInputParameters
EmitterEmitOutputParameters
EmitterEmitSubroutineFlags
RegCacheReset
RegCacheFlush
reg_i_find_empty_slot
RegCacheLeavesConstant
RegCacheLeavesAddress
RegCacheLeavesValue
RegCacheFindConstant
RegCacheFindAddress
RegCacheFindValue
LookupSymbolInNamespace
LookupSymbol
AddToNamespace
AddSymbol
AddAlias
AddAliasString
CheckNotPartialType
AddTypeToNamespace
MakeNumberType
IsTypeOfKind
IsArray
IsPtr
IsSubroutine
IsNum
IsSNum
IsScalar
IsRecord
MakeLValue
UndoLValue
IsLValue
MaybeUndoLValue
AllocLabel
AllocSubrId
MidWriter
ArchAlignUp
ArchInitTypes
ArchGuessIntType
ArchInitVariable
ArchInitMember
WriteMid1
WriteMid2
WriteMid3
WriteMid4
WriteMid5
WriteMid6
WriteMid7
WriteMid8
WriteMid9
WriteMid10
WriteMid11
PrintNodes
ReallyGenerate
Generate
GenerateConditional
push_and_free
InitVariable
MakePointerType
MakeArrayType
DestructSubroutineContents
QueueNamespace
CopyParameterList
CreateMainSubroutine
ReportWorkspaces
expr_i_cant_do_that
CheckExpressionType
ResolveUntypedConstantsForAddOrSub
CheckNumber
CheckNumberOrPointer
CheckNilCompatible
ResolveUntypedConstantsSimply
ResolveUntypedConstantsNeedingNumbers
CondSimple
Expr1Simple
ExprAdd
cant_add_that
ExprSub
cant_sub_that
Expr2Simple
expr_i_checkrhsconst
expr_i_checkshift
ExprShift
PushNode
PopNode
NextNode
Discard
BeginNormalLoop
TerminateNormalLoop
Negate
ConditionalEq
ConditionalLt
parser_i_bad_next_prev
parser_i_constant_error
i_check_sub_call_args
i_end_call
SymbolRedeclarationError
WrongNumberOfElementsError
CheckEndOfInitialiser
GetInitedMember
AlignTo
CheckForOverlaps
GetInitedMemberChecked
yy_destructor
token_destructor
yy_pop_parser_stack
yy_pop_all_parser_stack
yy_stack_overflow
yy_trace_shift
CopyMinor
yy_reduce
Reducer
reduce_0
reduce_1
reduce_2
reduce_3
reduce_4
reduce_5
reduce_6
reduce_7
reduce_8
reduce_9
reduce_10
reduce_11
reduce_12
reduce_13
reduce_14
reduce_15
reduce_16
reduce_17
reduce_18
reduce_19
reduce_20
reduce_21
reduce_22
reduce_23
reduce_24
reduce_25
reduce_26
reduce_27
reduce_28
reduce_29
reduce_30
reduce_31
reduce_32
reduce_33
reduce_34
reduce_35
reduce_36
reduce_37
reduce_38
reduce_39
reduce_40
reduce_41
reduce_42
reduce_43
reduce_44
reduce_45
reduce_46
reduce_47
reduce_48
reduce_49
reduce_50
reduce_51
reduce_52
reduce_53
reduce_54
reduce_55
not_a_value
reduce_56
reduce_57
reduce_58
BadType
reduce_59
reduce_60
reduce_61
reduce_62
reduce_63
reduce_64
reduce_65
reduce_66
reduce_67
reduce_68
reduce_69
reduce_70
reduce_71
reduce_72
reduce_73
reduce_74
reduce_75
reduce_76
reduce_77
reduce_78
reduce_79
reduce_80
reduce_81
reduce_82
reduce_83
reduce_84
reduce_85
reduce_86
reduce_87
reduce_88
not_an_interface
reduce_89
reduce_90
reduce_91
reduce_92
reduce_93
reduce_94
reduce_95
reduce_96
reduce_97
reduce_98
reduce_99
reduce_100
reduce_101
reduce_102
reduce_103
reduce_104
reduce_105
reduce_106
reduce_107
reduce_108
reduce_109
reduce_110
reduce_111
reduce_112
reduce_113
reduce_114
reduce_115
reduce_116
reduce_117
reduce_118
bad_reference
reduce_124
reduce_128
reduce_129
reduce_130
reduce_131
reduce_137
reduce_140
reduce_default
yy_parse_failed
yy_syntax_error
yy_accept
ParserInit
ParserDeinit
ParserFeedToken
PrintFreeMemory
SyntaxError
ParseArguments
done: 7kB free main memory
432kB free extended memory

C>cowlink cowgol.coo main.coo -o tmp.as
COWLINK: 46kB free
Adding input file: COWGOL.COO
Adding input file: MAIN.COO
Analysing...
Workspace sizes:
  #0: 1475 bytes
Creating output file: TMP.AS
Copying from input file: COWGOL.COO
Copying from input file: MAIN.COO
done: 15kB free

C>
----------------------------------------------------------

COMPILING COWBE

C>cowfen bmain.cow bmain.cos
COWFE: 21kB free
448kB free extended memory
  > BMAIN.COW
    > cowgol.coh
      > common.coh
    < cowgol.coh
  < BMAIN.COW
    > argv.coh
  < BMAIN.COW
    > strings.coh
  < BMAIN.COW
    > malloc.coh
  < BMAIN.COW
    > file.coh
      > commfile.coh
    < file.coh
  < BMAIN.COW
    > coodecls.coh
  < BMAIN.COW
    > btypes.coh
  < BMAIN.COW
    > butils.coh
  < BMAIN.COW
    > balloc.coh
  < BMAIN.COW
    > binsseld.coh
  < BMAIN.COW
    > bmidcode.coh
      > midcodbe.coh
    < bmidcode.coh
  < BMAIN.COW
    > bemitter.coh
  < BMAIN.COW
    > binputt.coh
  < BMAIN.COW
    > bcobin.coh
  < BMAIN.COW
    > bregcach.coh
  < BMAIN.COW
    > bcodegen.coh
      > binssel.coh
    < bcodegen.coh
  < BMAIN.COW
    > btreew.coh
  < BMAIN.COW
    > bprocess.coh
  < BMAIN.COW
done: 21kB free
200kB free extended memory

C>cowben bmain.cos bmain.coo
COWBE: 24kB free main memory
448kB free extended memory
__main
Exit
ExitWithError
AlignUp
get_char
print_char
MemSet
print
print_nl
UIToA
IToA
print_i32
print_i16
print_i8
print_hex_i8
print_hex_i16
print_hex_i32
AToI
MemZero
ArgvInit
ArgvNext
StrCmp
ToLower
StrICmp
StrLen
CopyString
MemCopy
DumpBlocks
CheckMemoryChain
RawAlloc
Alloc
AddFreeBlock
Free
GetFreeMemory
StrDup
file_i_init
fill
fcb_i_gbpb
fcb_i_blockin
fcb_i_blockout
fcb_i_changeblock
fcb_i_convert_a_to_error
FCBOpenIn
FCBOpenUp
FCBOpenOut
FCBClose
FCBSeek
FCBPos
FCBExt
fcb_i_nextchar
FCBGetChar
FCBPutChar
FCBPutString
FCBGetBlock
FCBPutBlock
MidReader
StartError
EndError
SimpleError
CannotOpen
InternalAlloc
GetInputParameter
GetOutputParameter
BadNodeWidth
WidthToIndex
MidcodeName
AllocateNewNode
FreeNode
PurgeAllFreeNodes
WriteB8
WriteB16
FlushCurrentStream
E_b8
E_b16
E_b32
E_space
E_comma
E_tab
E_nl
E_openp
E_closep
E
E_u32
E_u16
E_u8
E_i8
E_i16
E_i32
E_h
E_h8
E_h16
E_h32
E_labelref
E_subref
E_wsref
EmitterOpenStream
EmitterCloseStream
EmitterOpenfile
EmitterClosefile
EmitterDeclareSubroutine
EmitterDeclareExternalSubroutine
EmitterReferenceSubroutineById
EmitterReferenceSubroutine
EmitterDeclareWorkspace
I_b8
I_b16
I_b32
I_bsize
I_countedstring
InputterOpenfile
InputterClosefile
ReadMid1
ReadMid2
ReadMid3
ReadMid4
ReadMid5
ReadMid6
ReadMid7
ReadMid8
ReadMid9
ReadMid10
ReadMid11
RegCacheReset
RegCacheFlush
RegCacheFlushValues
reg_i_find_empty_slot
RegCacheLeavesConstant
RegCacheLeavesWsRef
RegCacheLeavesAddress
RegCacheLeavesValue
RegCacheFindConstant
RegCacheFindWsRef
RegCacheFindAddress
RegCacheFindValue
AllocLabel
AllocSubrId
AllocNewInstruction
FreeInstruction
PurgeAllFreeInstructions
FindConflictingRegisters
FindCompatibleRegisters
FindFirst
FindLast
RegCacheFlushValue
FindBitNumber
ArchAlignUp
E_symref
R_flushall
R_flush
E_label
E_jump
E_jp
E_jnz
E_ret
E_call
getreg
loreg
hireg
wordreg
E_reg
E_stackref
E_mov
E_ex
E_exx
E_push
E_pop
E_loadm
E_storem
E_stax
E_ldax
E_lda
E_sta
E_load8i
E_store8i
E_store8ic
E_loada
E_load16
E_store16
E_mvi
E_alu
E_cp
E_rra
E_cpl
E_rcf
E_sub
E_and
E_or
E_xor
E_alui
E_addi
E_adci
E_subi
E_sbci
E_ori
E_xori
E_andi
E_cpi
E_inc
E_dec
E_alu2
E_add
E_adc
E_sbc
E_shift
E_sra
E_srl
E_rr
E_bit
E_callhelper
E_string
ArchBeginComment
ArchEndComment
ArchEmitMove
E_lxi
E_lxia
ArchEndInstruction
ArchEndGroup
Call
CallI
is_indexable_8bit
is_indexable_16bit
is_indexable_32bit
is_small_positive
is_small_negative
aluop2
aluop2i
E_dvrmu2
E_dvrms2
logic2
logic2i
E_jumps_with_fallthrough
E_jumps_jz_jnz
E_jumps_jnz_jz
E_jumps_jc_jnc
E_jumps_jm_jp
bequ1
bequ1c
cmpeq2
bequ2c
bequ2
bequ4
bequ4c
beqc
case2
MatchPredicate
EmitOneInstruction
Emitter
emit_0
emit_1
emit_2
emit_3
emit_4
emit_5
emit_6
emit_7
emit_8
emit_9
emit_10
emit_11
emit_12
emit_13
emit_14
emit_15
emit_16
emit_17
emit_18
emit_19
emit_20
emit_21
emit_22
emit_23
emit_24
emit_25
emit_26
emit_27
emit_28
emit_29
emit_30
emit_31
emit_32
emit_33
emit_34
emit_36
emit_38
emit_39
emit_40
emit_41
emit_42
emit_43
emit_44
emit_45
emit_46
emit_47
emit_48
emit_49
emit_50
emit_51
emit_52
emit_53
emit_54
emit_55
emit_56
emit_57
emit_58
emit_59
emit_61
emit_62
emit_63
emit_64
emit_65
emit_66
emit_67
emit_68
emit_69
emit_70
emit_71
emit_72
emit_73
emit_74
emit_75
emit_78
emit_79
emit_80
emit_81
emit_85
emit_86
emit_88
emit_89
emit_90
emit_91
emit_92
emit_93
emit_94
emit_95
emit_96
emit_99
emit_100
emit_101
emit_102
emit_104
emit_106
emit_107
emit_108
pop_return_address
emit_109
push_return_address
emit_110
emit_112
emit_113
emit_114
emit_115
emit_116
emit_117
emit_118
emit_119
emit_120
emit_121
emit_122
emit_123
emit_124
emit_125
emit_126
emit_127
emit_128
emit_129
emit_130
emit_131
emit_132
emit_133
emit_134
emit_135
emit_136
emit_137
emit_138
emit_139
emit_140
emit_141
emit_142
emit_143
emit_144
emit_145
emit_146
emit_147
emit_148
emit_149
emit_150
emit_151
emit_152
emit_153
emit_154
emit_155
emit_156
emit_157
emit_158
emit_159
emit_160
emit_161
emit_162
emit_163
emit_164
emit_165
emit_166
emit_167
emit_168
emit_169
emit_170
emit_171
emit_172
emit_173
emit_174
emit_175
emit_176
emit_177
nop_emitter
PopulateMatchBuffer
IsStackedRegister
CalculateBlockedRegisters
CalculateBlockedRegistersInclusive
BlockRegisters
BlockRegistersInclusive
UnblockRegisters
CreateSpill
CreateReload
ShuffleRegisters
PrintNodes
PrintInstructions
IsRegisterSpilt
IsRegisterReloaded
IsSimpleValue
SimpleValuesMatch
check_deref
Generate
InstructionMatcher
RewindRulePointers
TestRule
ConvertNodeToFallback
CopyChildNodes
FindPreferredRegister
AllocateRegister
deadlock
UpdateProducedRegisters
EmitAndFreeInstructions
GenerateConditional
push_and_free
PushNode
PopNode
NextNode
Discard
I_node
AddSubr
FindSubr
ReadN
ReadX
ReadM
ReadParameters
ReadI
ReadO
ReadW
ReadR
ReadF
ProcessFile
PrintFreeMemory
SyntaxError
ParseArguments
done: 9kB free main memory
434kB free extended memory

C>cowlink cowgol.coo bmain.coo -o btmp.as
COWLINK: 46kB free
Adding input file: COWGOL.COO
Adding input file: BMAIN.COO
Analysing...
Workspace sizes:
  #0: 3206 bytes
Creating output file: BTMP.AS
Copying from input file: COWGOL.COO
Copying from input file: BMAIN.COO
done: 14kB free

C>
-----------------------------------------------------------------------




